# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# Status: 
# - verified action triggered by the new release.
# - correct upload to with test.pypi
# - correct installation from test.pypi.org: pip install --index-url https://test.pypi.org/simple/ publish-test
name: Upload Python Package

on:
  [push]
#  release:
#    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-20.04, windows-2025, windows-2022, windows-2019]

        
    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install pip packages
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        # to supply options, put them in 'env', like:
        env:
          CIBW_SKIP: "pp{38,39}-*"
          #CIBW_BUILD_VERBOSITY: 2
          CIBW_BEFORE_BUILD: pip install -r requirements.txt

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl    
          
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz      
         
  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    #if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Set OS list from workflow matrix
        id: set-matrix
        run: |
          echo "matrix_list=$(jq -r '.os[]' <<< '${{ toJson(strategy.matrix) }}')" >> $GITHUB_ENV

      - name: Download wheels artifacts
        run: |
          for os in $matrix_list; do
            echo "Downloading wheels-${os}"
            gh workflow run download-artifact --name "wheels-${os}" --path "dist/${os}" || exit 1
          done

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/sdist

      - name: Combine artifacts into a single folder
        run: |
          mkdir -p final_dist
          ls -l dist/*/*
          cp dist/*/* final_dist
          cp dist/sdist/* final_dist
          ls -l final_dist
          
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          packages-dir: final_dist
          user: ${{ secrets.PYPI_JBREZ_USER }}
          password: ${{ secrets.PYPI_JBREZ_PASS }}

    #- name: PYPI publish
      #env:
        #TWINE_USERNAME: 
        #TWINE_PASSWORD: ${{ secrets.PYPI_JBREZ_PASS }}
      #run: |
        #python setup.py sdist bdist_wheel
        #twine upload dist/*
        #twine upload --repository-url https://test.pypi.org/legacy/ dist/*
